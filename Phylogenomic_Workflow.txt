Phylogenomic Analysis: Tara Oceans Protocol
PROTOCOL ASSUMES YOU HAVE BINNED GENOMES
1.	Decide on marker set for phylogenomic analysis
a.	A good start is the 16 ribosomal proteins used in this paper: doi:10.1038/nmicrobiol.2016.48        
b.	The file containing these hmms is called hug_ribosomalmarkers.hmm 
c.	You may want to rename genomes to be more succinct (I like to have a short name like if I was working with northpond I may change the genome names to be NP_Bin-29.fna)
2.	To extract these ribosomal proteins from your genomes you should first run prodigal. To do this cd into the directory with your genomes of interest. Use the run-prodigal bash script to automate the prodigal run. You can use it by typing `bash run-prodigal` while in the directory with your genomes of interest (this assumes your genomes all end with `.fna`)
3.	This will output three  new directories: PRODIGAL, PRODIGAL-RECORDS, PRODIGAL-CUT. The PRODIGAL files contains the standard output files from prodigal, PRODIGAL-RECORDS contains the records for prodigal (a text file with information regarding the gene calls conducted you will have one for every genome), PRODIGAL-CUT contains the gene calls you will want to work with downstream. They are the same gene calls from the PRODIGAL directory, but we simplified the headers for the next script. 
4.	Run  identify_HMM_1E5.py
usage: identify_HMM_1E5.py [-h] [--markerdb MARKERDB] [--performProdigal]
                           [--outPrefix OUTPREFIX] [--MinNum MINNUM]
                           Input

Identify marker genes in in protein sequences of genomes.

positional arguments:
  Input                 Target file(s). Provide unifying text of desired
                        genome(s). Ext must be 'fna' or 'faa'.

optional arguments:
  -h, --help            show this help message and exit
  --markerdb MARKERDB   Provide HMM file of markers. Markers should have a
                        descriptive ID name.
  --performProdigal     Run Prodigal on input genome nucleotide FASTA file
  --outPrefix OUTPREFIX
                        Provide prefix of names for marker output files.
  --MinNum MINNUM       Number of genes being looked for (e.g if using hug
                        ribosomal set it would be 16
While in the PRODIGAL-CUT directory run this:

Identify_HMM_1E5.py --markerdb hug_rubosomalmarkers.hmm --outPrefix Hug --MinNum 16 .faa
5.	This should output 16 files with ribosomal proteins from all of your genomes. They will be named something along the lines of Hug_RpL4.faa so to make this easier move these files into a new directory for phylogeny.
mkdir ../Phylogeny-Hug
cp Hug_Rp* ../Phylogeny-Hug
cd ../Phylogeny-Hug
6.	Now you should be in a directory with all of your ribosomal proteins from your genomes. The next step will be to concatenate your sequences with your reference set. 

while read p; do cat Hug_$p.faa Full_Ref_Set_$p > [ProjectName]_HugRefSet_$p.faa; done < hug_marker_list.txt

This will leave you with the files youll want to align in muscle.

7.	Align in muscle. 

while read p; do muscle -maxiters 8 -in [ProjectName_HugRefSet_$p.faa -out [ProjectName_HugRefSet_$p.aln & done < hug_marker_list.txt

8.	Next trim these using Trimal

while read p; do trimal -automated1 -in [ProjectName_HugRefSet_$p.aln -out [ProjectName_HugRefSet_$p.trimmed.aln & done < hug_marker_list.txt

9.	Now that you have the trimmed and aligned sequences you can concatenate these 16 files.
10.	Using the concat script packaged with Binsanity run

Concat -f . -e .trimal.aln --Prefix [ProjectName]_HugRefSet -o [ProjectName]_HugRefSet_concatenated.aln -N 8

11.	You have a concatenated alignment now and can move on to the tree building step. 
FastTree -gamma -lg [ProjectName]_HugRefSet_concatenated.aln >[ProjectName_HugRefSet_concatenated.newick

12.	Now you have a phylogenetic tree! It will be huge if you use the full reference set that I have (which is ~7000 organisms). I use either dendroscope or itol to visually look at my newick file.
13.	Lastly youll want to look for any 16S sequences associated with your organisms. I use rnammer to search for 16S sequences. To do this what I would do this:

1.	Run genomes-to-singlefast-for-rnammer to generate the input for rnammer

genomes-to-singlefast-for-rnammer /directory/with/genomes/of/interest outputFileName

2.	Now run rnammer twice on this output file (once for bacteria and once for archaea  can also do euks). 
rnammer -S bacterial -m ssu -gff outputGFF_FileName -h output_hmmreport -f outputFasta inputSeq
rnammer -S archael -m ssu -gff outputGFF_FileName -h output_hmmreport -f outputFasta inputSeq

16S sequences can be analyzed in ARB

